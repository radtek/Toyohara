<style>
    #TechRoadGrid {
        max-width: 100% !important;
    }
</style>
@Html.Partial("Settings", (ToyoharaCore.Models.CustomModel.Settings)ViewBag.Settings3)
<div id="ObjectLogTechRoads"></div>
<div id="technical_road" class="modal fade" tabindex="-1" role="dialog" style="z-index:10000;" data-backdrop="static">
    <div class="modal-dialog" style="width: 60%;" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title">Технологические участки</h4>
            </div>
            <div class="modal-body">

                @(Html.DevExtreme().DataGrid<APL_SELECT_PROJECTS_STATIONINGS2Result>()
                                                                                                                                                        .ID("TechRoadGrid")
                                                                                                                                                        .DataSource(ds => ds.Mvc()
                                                                                                                                                        .Controller("Common")
                                                                                                                                                        .LoadAction("GetData")
                                                                                                                                                        .Key("id").LoadParams(new
                                                                                                                                                        {
                                                                                                                                                            additionalParams = new JS("function(){return ReturnTechRoadData('projects');}")
                                                                                                                                                            //showSelected = new JS("function(){return showSelected;}"),
                                                                                                                                                            //selectedRecord = new JS("function(){return selectedRecord;}"),
                                                                                                                                                            //only_new = new JS("function(){return document.getElementById('only_new').checked;}"),
                                                                                                                                                            //rebind = new JS("function(){return rebind;}"),
                                                                                                                                                            //ekk_guid_list = new JS("function(){return ReturnEkkNodes('ekk_code_name').selected_node.toString();}")
                                                                                                                                                        })
                                                                                                                                                        .UpdateAction("PutData").OnBeforeSend("onBeforeSendTechRoad")
                                                                                                                                                        .InsertAction("PostData").OnBeforeSend("onBeforeSendTechRoad")
                                                                                                                                                        )
                                                                                                                                                        //.KeyExpr("id")
                                                                                                                                                        //.ParentIdExpr("parent_id")
                                                                                                                                                        //.SearchPanel(searchPanel => searchPanel.Visible(true).Width(250))
                                                                                                                                                        .HeaderFilter(headerFilter => headerFilter.Visible(true))
                                                                                                                                                        //.Selection(s => s.Mode(SelectionMode.Multiple).ShowCheckBoxesMode(DevExtreme.AspNet.Mvc.GridSelectionShowCheckBoxesMode.Always).AllowSelectAll(true))
                                                                                                                                                        .Selection(s => s.Mode(SelectionMode.Multiple).AllowSelectAll(true))
                                                                                                                                                        .Editing(editing =>
                                                                                                                                                        {
                                                                                                                                                            editing.Mode(GridEditMode.Batch);
                                                                                                                                                            editing.AllowUpdating((bool)ViewBag.saveBtnVisible);
                                                                                                                                                            // editing.AllowAdding(true).UseIcons(true);
                                                                                                                                                        })
                                                                                                                                                        //.ColumnChooser(cc => cc.Enabled(true))
                                                                                                                                                        .ColumnAutoWidth(true)
                                                                                                                                                        .WordWrapEnabled(true)
                                                                                                                                                        .ShowBorders(true)
                                                                                                                                                        .OnInitNewRow("onInitNewRow")
                                                                                                                                                        .Columns(columns =>
                                                                                                                                                        {
                                                                                                                                                            columns.AddFor(m => m.id).HeaderCellTemplate(Convert.ToString(ViewData["CK_UI_id_grid_settings3_ru"])).Visible((bool)ViewData["CK_UI_id_grid_settings3"]).Width((int)ViewData["CK_UI_id_grid_settings3_width"]).VisibleIndex((int)ViewData["CK_UI_id_grid_settings3_pos"]).AllowEditing((bool)ViewData["CK_UI_id_grid_settings3_edit"]);
                                                                                                                                                            columns.AddFor(m => m.start).HeaderCellTemplate(Convert.ToString(ViewData["CK_UI_start_grid_settings3_ru"])).Visible((bool)ViewData["CK_UI_start_grid_settings3"]).Width((int)ViewData["CK_UI_start_grid_settings3_width"]).VisibleIndex((int)ViewData["CK_UI_start_grid_settings3_pos"]).AllowEditing((bool)ViewData["CK_UI_start_grid_settings3_edit"]);
                                                                                                                                                            columns.AddFor(m => m.finish).HeaderCellTemplate(Convert.ToString(ViewData["CK_UI_finish_grid_settings3_ru"])).Visible((bool)ViewData["CK_UI_finish_grid_settings3"]).Width((int)ViewData["CK_UI_finish_grid_settings3_width"]).VisibleIndex((int)ViewData["CK_UI_finish_grid_settings3_pos"]).AllowEditing((bool)ViewData["CK_UI_finish_grid_settings3_edit"]);
                                                                                                                                                            columns.AddFor(m => m.subcontractor_id).Lookup(lookup => lookup
                                                                                                                                                            .DataSource(new JS(ViewBag.SubDropdown))
                                                                                                                                                            .DisplayExpr("description")
                                                                                                                                                            .ValueExpr("id")).CssClass("zindex")
                                                                                                                                                            .HeaderCellTemplate(Convert.ToString(ViewData["CK_UI_subcontractor_id_grid_settings3_ru"])).Visible((bool)ViewData["CK_UI_subcontractor_id_grid_settings3"]).Width((int)ViewData["CK_UI_subcontractor_id_grid_settings3_width"]).VisibleIndex((int)ViewData["CK_UI_subcontractor_id_grid_settings3_pos"]).AllowEditing((bool)ViewData["CK_UI_subcontractor_id_grid_settings3_edit"]).CssClass("zindex");//.ValidationRules(validation => validation.AddCustom().ValidationCallback("validFunc"));;//.Caption(Convert.ToString(ViewData["CK_UI_lno_id_ru"])).Visible((bool)ViewData["CK_UI_lno_id"]).Width((int)ViewData["CK_UI_lno_id_width"]).VisibleIndex((int)ViewData["CK_UI_lno_id_pos"]).AllowEditing((bool)ViewData["CK_UI_lno_id_edit"]);
                                                                                                                                                            columns.AddFor(m => m.subcontractor_description).HeaderCellTemplate(Convert.ToString(ViewData["CK_UI_subcontractor_description_grid_settings3_ru"])).Visible((bool)ViewData["CK_UI_subcontractor_description_grid_settings3"]).Width((int)ViewData["CK_UI_subcontractor_description_grid_settings3_width"]).VisibleIndex((int)ViewData["CK_UI_subcontractor_description_grid_settings3_pos"]).AllowEditing((bool)ViewData["CK_UI_subcontractor_description_grid_settings3_edit"]);

                                                                                                                                                            columns.AddFor(m => m.stations).HeaderCellTemplate(Convert.ToString(ViewData["CK_UI_stations_grid_settings3_ru"])).Visible((bool)ViewData["CK_UI_stations_grid_settings3"]).Width((int)ViewData["CK_UI_stations_grid_settings3_width"]).VisibleIndex((int)ViewData["CK_UI_stations_grid_settings3_pos"]).AllowEditing((bool)ViewData["CK_UI_id_grid_settings3_edit"]);
                                                                                                                                                        }
                                                                                                                                                        //.Scrolling(scrolling => scrolling.Mode(TreeListScrollingMode.Standard))
                                                                                                                                                        ).Scrolling(scrolling => scrolling.Mode(GridScrollingMode.Standard).UseNative(true).ShowScrollbar(DevExtreme.AspNet.Mvc.ShowScrollbarMode.Always)).Paging(p => p.PageSize(30).Enabled(true))
                                                                                                                                                                                                                                        .Pager(pager =>
                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                            pager.ShowPageSizeSelector(true);
                                                                                                                                                                                                                                            pager.AllowedPageSizes(new List<int> { 5, 10, 20, 30, 50 });
                                                                                                                                                                                                                                            //pager.AllowedPageSizes(new List<int> { 5, 10, 20, 30, 50 });
                                                                                                                                                                                                                                            pager.ShowInfo(true);
                                                                                                                                                                                                                                            pager.ShowNavigationButtons(true);
                                                                                                                                                                                                                                            pager.Visible(true);
                                                                                                                                                                                                                                        })
                                                                                                                                                                                                                                        .FilterRow(f => f.Visible(true).ApplyFilter(GridApplyFilterMode.Auto))
                                                                                                                                                                                                                                        .HeaderFilter(f => f.Visible(true))
                                                                                                                                                                                                                                        //.RemoteOperations(op=>op.Filtering(true).Grouping(true))
                                                                                                                                                                                                                                        .ShowRowLines(true)
                                                                                                                                                                                                                                        .ColumnAutoWidth(false)
                                                                                                                                                                                                                                        .FilterSyncEnabled(true)
                                                                                                                                                                                                                                        //.Height(new JS("function() { return window.innerHeight-$('div.myheader').height();}"))
                                                                                                                                                                                                                                        .Width("100%")
                                                                                                                                                                                                                                        .LoadPanel(load => load.IndicatorSrc("/../../img/orig.gif").ShowIndicator(true).Height(200).Width(200))
                                                                                                                                                                                                                                        .Sorting(s => s.Mode(GridSortingMode.Multiple))
                                                                                                                                                                                                                                        .AllowColumnResizing(true)
                                                                                                                                                                                                                                        .AllowColumnReordering(true)
                                                                                                                                                                                                                                        .Option("columnResizingMode", ColumnResizingMode.Widget)
                                                                                                                                                                                                                                        .WordWrapEnabled(true)
                                                                                                                                                                                                                                        .OnToolbarPreparing("onToolbarTechRoadPreparing")
                                                                                                                                                                                                                                        .OnContentReady("contentTechRoadReady")
                        //.OnRowClick("onRowClick")
                        //.Scrolling(scrolling => scrolling.UseNative(true).ShowScrollbar(DevExtreme.AspNet.Mvc.ShowScrollbarMode.Always))
                )

                <div class="modal-footer">
                    @*<button type="button" class="btn btn_icon" style="margin-left:auto; margin-right:0; " onclick=' SaveFullSearchFilters("FullSearch", "",""); $("#FullSearch").modal("hide"); Reloading("Grid");'>
                        <span class="dx-icon-floppy icon"></span>
                        </button>
                    *@
                </div>
            </div>
        </div>
    </div>
</div>

<script>
   $(function () {
       if ('@ViewBag.saveBtnVisible'.toLowerCase() === 'true') $('#AddTechRoad').show(); else $('#AddTechRoad').hide();

       if ('@ViewBag.DeleteProjectStationings'.toLowerCase() === 'true') $('#DeleteProjectStationings').show(); else $('#DeleteProjectStationings').hide();
    });

    function onToolbarTechRoadPreparing(e) {
        var dataGrid = e.component;
        e.toolbarOptions.items.unshift({
            location: "after",
            template: $(
                "<button title='Добавить' class='btn btn_in_grid dx-button btn_pad_grid' onclick='AddTechRoad();' style='display: none;'  id='AddTechRoad'><img src='/../../img/GridBtn/1-1.png' style='height:18px; width:auto;' alt='Добавить'></img></button>" +
                "<button title='Удалить' class='btn btn_in_grid dx-button btn_pad_grid' onclick='DeleteProjectStationings();' id='DeleteProjectStationings'><img src='/../../img/GridBtn/1-3.png' width='18 height='18' alt='Удалить' /></button>" +
                "<button class='btn btn_in_grid dx-button btn_pad_grid' title='Обновить' onclick='Reloading2(\"TechRoadGrid\")' id='ReloadingTechRoadGrid'><img src='/../../img/GridBtn/1-5.png' style='height:18px; width:auto;' alt='Искать' ></img></button>" +
                "<button title='Очистить фильтры' onclick='ClearFilters(\"TechRoadGrid\")' class='btn btn_in_grid dx-button btn_pad_grid' id='ClearFiltersTechRoadGrid'><img src='/../../img/GridBtn/1-9.png' style='height:18px; width:auto;'  alt='Очистить фильтры'></img></button>" +
                 "<button title='Выгрузить Excel' class='btn btn_in_grid dx-button btn_pad_grid' onclick='ExcelTechRoad();' id='ExcelTechRoad'><img src='/../../img/GridBtn/1-4.png' style='height:18px; width:auto;' alt='Выгрузить Excel'></img></button>" +
                "<button title='Настройки' class= 'btn btn_in_grid dx-button btn_pad_grid' data-toggle='modal' data-target='#UserSettings3' id='UserSettings3' ><img src='/../../img/GridBtn/1-6.png' style='height:18px; width:auto;' alt='Настройки'></img></button>" +
                "<button title='История изменения' class='btn btn_in_grid dx-button btn_pad_grid' onclick='ObjectLogTechRoads()' id='ObjectLogTechRoads'><img src='/../../img/GridBtn/1-12.png' style='height:18px; width:auto;' alt='Групповое обновление'></img></button>"
            )
        });
    }



    function ObjectLogTechRoads() {
        var dataGrid = $("#TechRoadGrid").dxDataGrid("instance");
        var selectedKeys = dataGrid.getSelectedRowKeys();
        if (selectedKeys.length == 0) { alert('Вы не выбрали ни одной строки'); }
        if (selectedKeys.length > 1) { alert('Вы выбрали больше одной строки. Для просмотра истории нужно выбрать только одну строку'); }
        if (selectedKeys.length == 1) {
            var selectedData = dataGrid.getSelectedRowsData();
            $.ajax({
                async: true,
                cache: false,
                url: "/Common/ObjectLog",
                type: "Get",
                data: {
                    object_type: 'project_stationing',
                    object_id: dataGrid.cellValue(dataGrid.getRowIndexByKey(selectedKeys[0]), "id")
                },
                success: function (partialViewResult) {
                    $("#ObjectLogTechRoads").html(partialViewResult);
                    $('#ObjLog').modal('show');
                }
            });
        }
    }



</script>