@{Layout = "~/Views/Shared/_Layout.cshtml";
    string control = ViewContext.RouteData.Values["Controller"].ToString();
}
@using ToyoharaCore.Models
@using ToyoharaCore.Models.CustomModel
<link href="~/css/Forms/Index.css" rel="stylesheet" />
<script src="~/js/Forms/SVRItems.js"></script>


<input type="hidden" name="form_id" id="form_id" value=@ViewData["form_id"]>

@Html.Partial("Settings", (Settings)ViewBag.Settings)





<div id="FullSearch" class="modal fade" tabindex="-1" role="dialog" style="z-index:10000;">
        <div class="modal-dialog" style="width: 60%;" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick='RemoveFullSearchFilters("FullSearch", "", "");'>
                        <span aria-hidden="true">&times;</span>
                    </button>
                    <h4 class="modal-title"> Расширенный поиск</h4>
                </div>
                <div class="modal-body">
                    <table class="table table-condensed" style="width:100%; table-layout:fixed;">
                        <tbody id="">
                            <tr>
                                <td style="">
                                    <label class='form-check-label btn_in_grid' for='show_only_for_pricing'> Показывать только позиции для расценки</label>
                                    <input type='checkbox' class='form-check-input btn_in_grid full_search_check' id='show_only_for_pricing' data_type="check" checked>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                    <div class="modal-footer">
                        <button type="button" class="btn btn_icon" style="margin-left:auto; margin-right:0; " onclick=' SaveFullSearchFilters("FullSearch", "", ""); $("#FullSearch").modal("hide"); Reloading("Grid");'>
                            <span class="dx-icon-floppy icon"></span>
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>




@(Html.DevExtreme().DataGrid<OMC_SELECT_FORM_SVR_ITEMSResult>
                        ()
                        .ID("Grid")
                        .ShowBorders(true)
                        .DataSource(d => d.Mvc()
                        .LoadAction("GetData")
                        .Controller("Common")
                        .Key("id")

                        .LoadParams(new
                        {
                            additionalParams = new JS("function(){return ReturnData('" + control + "');}")
                        })
                        )

                        .Columns(columns =>
                        {
                            columns.AddFor(m => m.id).HeaderCellTemplate(Convert.ToString(ViewData["CK_UI_id_ru"])).Visible((bool)ViewData["CK_UI_id"]).Width((int)ViewData["CK_UI_id_width"]).VisibleIndex((int)ViewData["CK_UI_id_pos"]).AllowEditing((bool)ViewData["CK_UI_id_edit"]);
                            columns.AddFor(m => m.form_id).HeaderCellTemplate(Convert.ToString(ViewData["form_id_ru"])).Visible((bool)ViewData["CK_UI_form_id"]).Width((int)ViewData["CK_UI_form_id_width"]).VisibleIndex((int)ViewData["CK_UI_form_id_pos"]).AllowEditing((bool)ViewData["CK_UI_form_id_edit"]);
                            columns.AddFor(m => m.local_estimate_number).HeaderCellTemplate(Convert.ToString(ViewData["CK_UI_local_estimate_number_ru"])).Visible((bool)ViewData["CK_UI_local_estimate_number"]).Width((int)ViewData["CK_UI_local_estimate_number_width"]).VisibleIndex((int)ViewData["CK_UI_local_estimate_number_pos"]).AllowEditing((bool)ViewData["CK_UI_local_estimate_number_edit"]);
                            columns.AddFor(m => m.project_documentation_code).HeaderCellTemplate(Convert.ToString(ViewData["CK_UI_project_documentation_code_ru"])).Visible((bool)ViewData["CK_UI_project_documentation_code"]).Width((int)ViewData["CK_UI_project_documentation_code_width"]).VisibleIndex((int)ViewData["CK_UI_project_documentation_code_pos"]).AllowEditing((bool)ViewData["CK_UI_project_documentation_code_edit"]);
                            columns.AddFor(m => m.number).HeaderCellTemplate(Convert.ToString(ViewData["CK_UI_number_ru"])).Visible((bool)ViewData["CK_UI_number"]).Width((int)ViewData["CK_UI_number_width"]).VisibleIndex((int)ViewData["CK_UI_number_pos"]).AllowEditing((bool)ViewData["CK_UI_number_edit"]);
                            columns.AddFor(m => m.resource_code).HeaderCellTemplate(Convert.ToString(ViewData["CK_UI_resource_code_ru"])).Visible((bool)ViewData["CK_UI_resource_code"]).Width((int)ViewData["CK_UI_resource_code_width"]).VisibleIndex((int)ViewData["CK_UI_resource_code_pos"]).AllowEditing((bool)ViewData["CK_UI_resource_code_edit"]);
                            columns.AddFor(m => m.ekk_code).HeaderCellTemplate(Convert.ToString(ViewData["CK_UI_ekk_code_ru"])).Visible((bool)ViewData["CK_UI_ekk_code"]).Width((int)ViewData["CK_UI_ekk_code_width"]).VisibleIndex((int)ViewData["CK_UI_ekk_code_pos"]).AllowEditing((bool)ViewData["CK_UI_ekk_code_edit"]);
                            columns.AddFor(m => m.price_manager_id).HeaderCellTemplate(Convert.ToString(ViewData["CK_UI_price_manager_id_ru"])).Visible((bool)ViewData["CK_UI_price_manager_id"]).Width((int)ViewData["CK_UI_price_manager_id_width"]).VisibleIndex((int)ViewData["CK_UI_price_manager_id_pos"]).AllowEditing((bool)ViewData["CK_UI_price_manager_id_edit"]);
                            columns.AddFor(m => m.price_manager_description).HeaderCellTemplate(Convert.ToString(ViewData["CK_UI_price_manager_description_ru"])).Visible((bool)ViewData["CK_UI_price_manager_description"]).Width((int)ViewData["CK_UI_price_manager_description_width"]).VisibleIndex((int)ViewData["CK_UI_price_manager_description_pos"]).AllowEditing((bool)ViewData["CK_UI_price_manager_description_edit"]);
                            columns.AddFor(m => m.description).HeaderCellTemplate(Convert.ToString(ViewData["CK_UI_description_ru"])).Visible((bool)ViewData["CK_UI_description"]).Width((int)ViewData["CK_UI_description_width"]).VisibleIndex((int)ViewData["CK_UI_description_pos"]).AllowEditing((bool)ViewData["CK_UI_description_edit"]);
                            columns.AddFor(m => m.unit_id).HeaderCellTemplate(Convert.ToString(ViewData["CK_UI_unit_id_ru"])).Visible((bool)ViewData["CK_UI_unit_id"]).Width((int)ViewData["CK_UI_unit_id_width"]).VisibleIndex((int)ViewData["CK_UI_unit_id_pos"]).AllowEditing((bool)ViewData["CK_UI_unit_id_edit"]);
                            columns.AddFor(m => m.unit_description).HeaderCellTemplate(Convert.ToString(ViewData["CK_UI_unit_description_ru"])).Visible((bool)ViewData["CK_UI_unit_description"]).Width((int)ViewData["CK_UI_unit_description_width"]).VisibleIndex((int)ViewData["CK_UI_unit_description_pos"]).AllowEditing((bool)ViewData["CK_UI_unit_description_edit"]);
                            columns.AddFor(m => m.quantity).HeaderCellTemplate(Convert.ToString(ViewData["CK_UI_quantity_ru"])).Visible((bool)ViewData["CK_UI_quantity"]).Width((int)ViewData["CK_UI_quantity_width"]).VisibleIndex((int)ViewData["CK_UI_quantity_pos"]).AllowEditing((bool)ViewData["CK_UI_quantity_edit"]);
                            columns.AddFor(m => m.price).HeaderCellTemplate(Convert.ToString(ViewData["CK_UI_price_ru"])).Visible((bool)ViewData["CK_UI_price"]).Width((int)ViewData["CK_UI_price_width"]).VisibleIndex((int)ViewData["CK_UI_price_pos"]).AllowEditing((bool)ViewData["CK_UI_price_edit"]);
                            columns.AddFor(m => m.summa).HeaderCellTemplate(Convert.ToString(ViewData["CK_UI_summa_ru"])).Visible((bool)ViewData["CK_UI_summa"]).Width((int)ViewData["CK_UI_summa_width"]).VisibleIndex((int)ViewData["CK_UI_summa_pos"]).AllowEditing((bool)ViewData["CK_UI_summa_edit"]);
                            columns.AddFor(m => m.turnover).HeaderCellTemplate(Convert.ToString(ViewData["CK_UI_turnover_ru"])).Visible((bool)ViewData["CK_UI_turnover"]).Width((int)ViewData["CK_UI_turnover_width"]).VisibleIndex((int)ViewData["CK_UI_turnover_pos"]).AllowEditing((bool)ViewData["CK_UI_turnover_edit"]);
                            columns.AddFor(m => m.svr_delivery_type).HeaderCellTemplate(Convert.ToString(ViewData["CK_UI_svr_delivery_type_ru"])).Visible((bool)ViewData["CK_UI_svr_delivery_type"]).Width((int)ViewData["CK_UI_svr_delivery_type_width"]).VisibleIndex((int)ViewData["CK_UI_svr_delivery_type_pos"]).AllowEditing((bool)ViewData["CK_UI_svr_delivery_type_edit"]);
                            columns.AddFor(m => m.add_info).HeaderCellTemplate(Convert.ToString(ViewData["CK_UI_add_info_ru"])).Visible((bool)ViewData["CK_UI_add_info"]).Width((int)ViewData["CK_UI_add_info_width"]).VisibleIndex((int)ViewData["CK_UI_add_info_pos"]).AllowEditing((bool)ViewData["CK_UI_add_info_edit"]);
                            columns.AddFor(m => m.suggested_delivery_type_id).HeaderCellTemplate(Convert.ToString(ViewData["CK_UI_suggested_delivery_type_id_ru"])).Visible((bool)ViewData["CK_UI_suggested_delivery_type_id"]).Width((int)ViewData["CK_UI_suggested_delivery_type_id_width"]).VisibleIndex((int)ViewData["CK_UI_suggested_delivery_type_id_pos"]).AllowEditing((bool)ViewData["CK_UI_suggested_delivery_type_id_edit"]);
                            columns.AddFor(m => m.suggested_delivery_type_description).HeaderCellTemplate(Convert.ToString(ViewData["CK_UI_suggested_delivery_type_description_ru"])).Visible((bool)ViewData["CK_UI_suggested_delivery_type_description"]).Width((int)ViewData["CK_UI_suggested_delivery_type_description_width"]).VisibleIndex((int)ViewData["CK_UI_suggested_delivery_type_description_pos"]).AllowEditing((bool)ViewData["CK_UI_suggested_delivery_type_description_edit"]);
                            columns.AddFor(m => m.delivery_type_id).HeaderCellTemplate(Convert.ToString(ViewData["CK_UI_delivery_type_id_ru"])).Visible((bool)ViewData["CK_UI_delivery_type_id"]).Width((int)ViewData["CK_UI_delivery_type_id_width"]).VisibleIndex((int)ViewData["CK_UI_delivery_type_id_pos"]).AllowEditing((bool)ViewData["CK_UI_delivery_type_id_edit"]);
                            columns.AddFor(m => m.delivery_type_description).HeaderCellTemplate(Convert.ToString(ViewData["CK_UI_delivery_type_description_ru"])).Visible((bool)ViewData["CK_UI_delivery_type_description"]).Width((int)ViewData["CK_UI_delivery_type_description_width"]).VisibleIndex((int)ViewData["CK_UI_delivery_type_description_pos"]).AllowEditing((bool)ViewData["CK_UI_delivery_type_description_edit"]);
                            columns.AddFor(m => m.unsi_comment).HeaderCellTemplate(Convert.ToString(ViewData["CK_UI_unsi_comment_ru"])).Visible((bool)ViewData["CK_UI_unsi_comment"]).Width((int)ViewData["CK_UI_unsi_comment_width"]).VisibleIndex((int)ViewData["CK_UI_unsi_comment_pos"]).AllowEditing((bool)ViewData["CK_UI_unsi_comment_edit"]);
                            columns.AddFor(m => m.dmtos_comment).HeaderCellTemplate(Convert.ToString(ViewData["CK_UI_dmtos_comment_ru"])).Visible((bool)ViewData["CK_UI_dmtos_comment"]).Width((int)ViewData["CK_UI_dmtos_comment_width"]).VisibleIndex((int)ViewData["CK_UI_dmtos_comment_pos"]).AllowEditing((bool)ViewData["CK_UI_dmtos_comment_edit"]);
                            columns.AddFor(m => m.changes_info).HeaderCellTemplate(Convert.ToString(ViewData["CK_UI_changes_info_ru"])).Visible((bool)ViewData["CK_UI_changes_info"]).Width((int)ViewData["CK_UI_changes_info_width"]).VisibleIndex((int)ViewData["CK_UI_changes_info_pos"]).AllowEditing((bool)ViewData["CK_UI_changes_info_edit"]);
                            columns.AddFor(m => m.commit_changes_date).HeaderCellTemplate(Convert.ToString(ViewData["CK_UI_commit_changes_date_ru"])).Visible((bool)ViewData["CK_UI_commit_changes_date"]).Width((int)ViewData["CK_UI_commit_changes_date_width"]).VisibleIndex((int)ViewData["CK_UI_commit_changes_date_pos"]).AllowEditing((bool)ViewData["CK_UI_commit_changes_date_edit"]);
                            columns.AddFor(m => m.for_pricing).HeaderCellTemplate(Convert.ToString(ViewData["CK_UI_for_pricing_ru"])).Visible((bool)ViewData["CK_UI_for_pricing"]).Width((int)ViewData["CK_UI_for_pricing_width"]).VisibleIndex((int)ViewData["CK_UI_for_pricing_pos"]).AllowEditing((bool)ViewData["CK_UI_for_pricing_edit"]);

                        })
                                                .Paging(p => p.PageSize(30))
                                                .Pager(pager =>
                                                {
                                                    pager.ShowPageSizeSelector(true);
                                                    pager.AllowedPageSizes(new List<int> { 5, 10, 20, 30, 50 });
                                                    pager.AllowedPageSizes(new List<int> { 5, 10, 20, 30, 50 });
                                                    pager.ShowInfo(true);
                                                    pager.ShowNavigationButtons(true);
                                                    pager.Visible(true);
                                                })

                                                .FilterRow(f => f.Visible(true).ApplyFilter(GridApplyFilterMode.Auto))
                                                .HeaderFilter(f => f.Visible(true))
                                                .RemoteOperations(true)
                                                .ShowRowLines(true)
                                                .ColumnAutoWidth(true)
                                                .FilterSyncEnabled(true)
                                                .Height(new JS("function() { return window.innerHeight-$('div.myheader').height();}"))
                                                .Width("100%")
                                                .LoadPanel(load => load.IndicatorSrc("/../../img/orig.gif").ShowIndicator(true).Height(200).Width(200))
                                                .Sorting(s => s.Mode(GridSortingMode.Multiple))
                                                .AllowColumnResizing(true)
                                                .AllowColumnReordering(true)
                                                .Option("columnResizingMode", ColumnResizingMode.Widget)
                                                .WordWrapEnabled(true)
                                                .OnContentReady("contentReady")
                                                .OnToolbarPreparing("onToolbarPreparing")
                                                .Scrolling(scrolling => scrolling.UseNative(true).ShowScrollbar(DevExtreme.AspNet.Mvc.ShowScrollbarMode.Always)))

